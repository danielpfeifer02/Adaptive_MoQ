This example code should show the modularizability of the approach
using bpf filtering for fast MoQ relays.

The idea is to show that in the following setup the relay can 
directly forward a packet from ingress to egress and bpf programs
on both hook points allow us to handle any packet.

The setup looks like this:

 __________                               _______                               __________ 
|          |                             |       |                             |          |
|  Server  |------> veth0 / veth1 ------>| Relay |------> veth2 / veth3 ------>|  Client  |
|__________|                             |_______|                             |__________|


We use virtual ethernet interfaces to simulate a real setup on a single machine.
An ingress bpf program will be attached to the veth1 interface and run once a 
packet is received by the relay. Then, without going up the network stack of the
relay, the packet is directly redirected using bpf_redirect.


ifindex's are:

veth1/veth0: 12
veth0/veth1: 13
veth3/veth2: 14
veth2/veth3: 15 



The interface setup should look something like this:

danpfei02@danpfei02-ThinkPad-T14-Gen-3:~/Desktop/thesis/Adaptive_MoQ/modularization$ ip link show
    ...
12: veth1@veth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether a2:85:a2:09:2a:77 brd ff:ff:ff:ff:ff:ff
13: veth0@veth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether 9e:62:a8:09:5c:69 brd ff:ff:ff:ff:ff:ff
14: veth3@veth2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether f2:51:1c:4c:2b:0b brd ff:ff:ff:ff:ff:ff
15: veth2@veth3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether ce:b8:3f:d5:f3:17 brd ff:ff:ff:ff:ff:ff

with ip addresses added to the veth's

danpfei02@danpfei02-ThinkPad-T14-Gen-3:~/Desktop/thesis/Adaptive_MoQ/modularization$ ip addr show
    ...
12: veth1@veth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether a2:85:a2:09:2a:77 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.2/24 scope global veth1
       valid_lft forever preferred_lft forever
    inet6 fe80::a085:a2ff:fe09:2a77/64 scope link 
       valid_lft forever preferred_lft forever
13: veth0@veth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether 9e:62:a8:09:5c:69 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.1/24 scope global veth0
       valid_lft forever preferred_lft forever
    inet6 fe80::9c62:a8ff:fe09:5c69/64 scope link 
       valid_lft forever preferred_lft forever
14: veth3@veth2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether f2:51:1c:4c:2b:0b brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.4/24 scope global veth3
       valid_lft forever preferred_lft forever
    inet6 fe80::f051:1cff:fe4c:2b0b/64 scope link 
       valid_lft forever preferred_lft forever
15: veth2@veth3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether ce:b8:3f:d5:f3:17 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.3/24 scope global veth2
       valid_lft forever preferred_lft forever
    inet6 fe80::ccb8:3fff:fed5:f317/64 scope link 
       valid_lft forever preferred_lft forever